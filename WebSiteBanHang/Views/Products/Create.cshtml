@model WebSiteBanHang.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="card card-success">
            <div class="card-header">
                <h3 class="card-title">Create Product</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">

               
                <div class="form-horizontal">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("id", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.idProduct, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.idProduct, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("picture", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">

                                    <img id="output" class="img-rounded" alt="ảnh" width="18" height="20" src="~/wwwroot/noImage.jpg" />
                                    <p><label for="ufile" style="cursor:pointer;">Chọn file ảnh</label></p>
                                    <input name="ImageFile" id="ufile" type="file" style="display:none;" value="ImageFile" onchange="loadFile(event)" />
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("price", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.priceProduct, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.priceProduct, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("weight", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.weightProduct, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.weightProduct, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("id Category", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.DropDownList("idCategory", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idCategory, "", new { @class = "text-danger" })
                                </div>
                            </div>



                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("name", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.nameProduct, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.nameProduct, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("rate", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12 mb-5">

                                    @Html.RadioButtonFor(model => model.rateProduct, "1")
                                    1 star
                                    @Html.RadioButtonFor(model => model.rateProduct, "2")
                                    2 stars
                                    @Html.RadioButtonFor(model => model.rateProduct, "3")
                                    3 stars
                                    @Html.RadioButtonFor(model => model.rateProduct, "4")
                                    4 stars
                                    @Html.RadioButtonFor(model => model.rateProduct, "5")
                                    5 stars
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("quality ", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.qualityProduct, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.qualityProduct, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("dismension", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.dismensionProduct, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.dismensionProduct, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("id User", htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-12">
                                    @Html.DropDownList("idUser", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idUser, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("description", htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.descriptionProduct, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.descriptionProduct, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="d-flex justify-content-center align-items-center">
                                <input type="submit" value="Create" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
}
<script>
    var loadFile = function (event) {
        var image = document.getElementById('output');
        image.src = URL.createObjectURL(event.target.file[0]);
    };

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
