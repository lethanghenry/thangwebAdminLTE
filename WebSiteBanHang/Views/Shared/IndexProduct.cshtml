@model IEnumerable<WebSiteBanHang.Models.Product>

<div class="row">
    <div class="card card-success">
        <div class="card-header">
            <h3 class="card-title">Product</h3>

            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                    <i class="fas fa-minus"></i>
                </button>
                <button type="button" class="btn btn-tool" data-card-widget="remove">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="card-body table-responsive p-0">
         

            <table class="table  table-head-fixed text-nowrap">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Picture</th>
                        <th>Price</th>
                        <th>Rate</th>
                        <th>Quality</th>
                        <th>Weight</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.nameProduct)
                            </td>
                            <td>
                                @{
                                    string ImagePath = "~/wwwroot/dataImage/" + item.pictureProduct;
                                }
                                <img src="@Url.Content(ImagePath)" width="100" class="img-thumbnail" />
                                @Html.DisplayFor(modelItem => item.pictureProduct)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.priceProduct)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.rateProduct)
                            </td>
                            <td>

                                @Html.DisplayFor(modelItem => item.qualityProduct)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.weightProduct)
                            </td>

                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.idProduct }, new { @class = "btn btn-outline-primary" })
                            </td>
                            <td>
                                @Html.ActionLink("Delete", "Delete2", new { id = item.idProduct }, new { @OnClick = "remove()", @class = "btn btn-outline-danger " })
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th>Name</th>
                        <th>Picture</th>
                        <th>Price</th>
                        <th>Rate</th>
                        <th>Quality</th>
                        <th>Weight</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </tfoot>
            </table>
        </div>

    </div>
    
</div>
<script>
    function remove() {
        var isConfirm = confirm('Are sure wants to delete?');
        if (isConfirm == true) {
            return true;
        }
        else {
            event.preventDefault();
        }
        return false;
    }
</script>
